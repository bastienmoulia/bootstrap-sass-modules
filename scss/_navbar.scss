@use "variables";
@use "mixins/border-radius";
@use "mixins/box-shadow";
@use "mixins/breakpoints";
@use "mixins/color-mode";
@use "mixins/deprecate";
@use "mixins/escape-svg";
@use "mixins/gradients";
@use "mixins/transition";
@use "vendor/rfs";

// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  // scss-docs-start navbar-css-vars
  --#{variables.$prefix}navbar-padding-x: #{if(
      variables.$navbar-padding-x == null,
      0,
      variables.$navbar-padding-x
    )};
  --#{variables.$prefix}navbar-padding-y: #{variables.$navbar-padding-y};
  --#{variables.$prefix}navbar-color: #{variables.$navbar-light-color};
  --#{variables.$prefix}navbar-hover-color: #{variables.$navbar-light-hover-color};
  --#{variables.$prefix}navbar-disabled-color: #{variables.$navbar-light-disabled-color};
  --#{variables.$prefix}navbar-active-color: #{variables.$navbar-light-active-color};
  --#{variables.$prefix}navbar-brand-padding-y: #{variables.$navbar-brand-padding-y};
  --#{variables.$prefix}navbar-brand-margin-end: #{variables.$navbar-brand-margin-end};
  --#{variables.$prefix}navbar-brand-font-size: #{variables.$navbar-brand-font-size};
  --#{variables.$prefix}navbar-brand-color: #{variables.$navbar-light-brand-color};
  --#{variables.$prefix}navbar-brand-hover-color: #{variables.$navbar-light-brand-hover-color};
  --#{variables.$prefix}navbar-nav-link-padding-x: #{variables.$navbar-nav-link-padding-x};
  --#{variables.$prefix}navbar-toggler-padding-y: #{variables.$navbar-toggler-padding-y};
  --#{variables.$prefix}navbar-toggler-padding-x: #{variables.$navbar-toggler-padding-x};
  --#{variables.$prefix}navbar-toggler-font-size: #{variables.$navbar-toggler-font-size};
  --#{variables.$prefix}navbar-toggler-icon-bg: #{escape-svg.escape-svg(
      variables.$navbar-light-toggler-icon-bg
    )};
  --#{variables.$prefix}navbar-toggler-border-color: #{variables.$navbar-light-toggler-border-color};
  --#{variables.$prefix}navbar-toggler-border-radius: #{variables.$navbar-toggler-border-radius};
  --#{variables.$prefix}navbar-toggler-focus-width: #{variables.$navbar-toggler-focus-width};
  --#{variables.$prefix}navbar-toggler-transition: #{variables.$navbar-toggler-transition};
  // scss-docs-end navbar-css-vars

  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: var(--#{variables.$prefix}navbar-padding-y)
    var(--#{variables.$prefix}navbar-padding-x);
  @include gradients.gradient-bg();

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properties so that content nested within behave properly.
  // The `flex-wrap` property is inherited to simplify the expanded navbars
  %container-flex-properties {
    display: flex;
    flex-wrap: inherit;
    align-items: center;
    justify-content: space-between;
  }

  > .container,
  > .container-fluid {
    @extend %container-flex-properties;
  }

  @each $breakpoint, $container-max-width in variables.$container-max-widths {
    > .container#{breakpoints.breakpoint-infix($breakpoint, variables.$container-max-widths)} {
      @extend %container-flex-properties;
    }
  }
}

// Navbar brand
//
// Used for brand, project, or site names.

.navbar-brand {
  padding-top: var(--#{variables.$prefix}navbar-brand-padding-y);
  padding-bottom: var(--#{variables.$prefix}navbar-brand-padding-y);
  margin-right: var(--#{variables.$prefix}navbar-brand-margin-end);
  @include rfs.font-size(var(--#{variables.$prefix}navbar-brand-font-size));
  color: var(--#{variables.$prefix}navbar-brand-color);
  text-decoration: if(variables.$link-decoration == none, null, none);
  white-space: nowrap;

  &:hover,
  &:focus {
    color: var(--#{variables.$prefix}navbar-brand-hover-color);
    text-decoration: if(
      variables.$link-hover-decoration == underline,
      none,
      null
    );
  }
}

// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
  // scss-docs-start navbar-nav-css-vars
  --#{variables.$prefix}nav-link-padding-x: 0;
  --#{variables.$prefix}nav-link-padding-y: #{variables.$nav-link-padding-y};
  @include rfs.rfs(
    variables.$nav-link-font-size,
    --#{variables.$prefix}nav-link-font-size
  );
  --#{variables.$prefix}nav-link-font-weight: #{variables.$nav-link-font-weight};
  --#{variables.$prefix}nav-link-color: var(--#{variables.$prefix}navbar-color);
  --#{variables.$prefix}nav-link-hover-color: var(
    --#{variables.$prefix}navbar-hover-color
  );
  --#{variables.$prefix}nav-link-disabled-color: var(
    --#{variables.$prefix}navbar-disabled-color
  );
  // scss-docs-end navbar-nav-css-vars

  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-link {
    &.active,
    &.show {
      color: var(--#{variables.$prefix}navbar-active-color);
    }
  }

  .dropdown-menu {
    position: static;
  }
}

// Navbar text
//
//

.navbar-text {
  padding-top: variables.$nav-link-padding-y;
  padding-bottom: variables.$nav-link-padding-y;
  color: var(--#{variables.$prefix}navbar-color);

  a,
  a:hover,
  a:focus {
    color: var(--#{variables.$prefix}navbar-active-color);
  }
}

// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
  padding: var(--#{variables.$prefix}navbar-toggler-padding-y)
    var(--#{variables.$prefix}navbar-toggler-padding-x);
  @include rfs.font-size(var(--#{variables.$prefix}navbar-toggler-font-size));
  line-height: 1;
  color: var(--#{variables.$prefix}navbar-color);
  background-color: transparent; // remove default button style
  border: var(--#{variables.$prefix}border-width) solid
    var(--#{variables.$prefix}navbar-toggler-border-color); // remove default button style
  @include border-radius.border-radius(
    var(--#{variables.$prefix}navbar-toggler-border-radius)
  );
  @include transition.transition(
    var(--#{variables.$prefix}navbar-toggler-transition)
  );

  &:hover {
    text-decoration: none;
  }

  &:focus {
    text-decoration: none;
    outline: 0;
    box-shadow: 0 0 0 var(--#{variables.$prefix}navbar-toggler-focus-width);
  }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.navbar-toggler-icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  background-image: var(--#{variables.$prefix}navbar-toggler-icon-bg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: 100%;
}

.navbar-nav-scroll {
  max-height: var(--#{variables.$prefix}scroll-height, 75vh);
  overflow-y: auto;
}

// scss-docs-start navbar-expand-loop
// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.
.navbar-expand {
  @each $breakpoint in map-keys(variables.$grid-breakpoints) {
    $next: breakpoints.breakpoint-next(
      $breakpoint,
      variables.$grid-breakpoints
    );
    $infix: breakpoints.breakpoint-infix($next, variables.$grid-breakpoints);

    // stylelint-disable-next-line scss/selector-no-union-class-name
    &#{$infix} {
      @include breakpoints.media-breakpoint-up($next) {
        flex-wrap: nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: var(--#{variables.$prefix}navbar-nav-link-padding-x);
            padding-left: var(--#{variables.$prefix}navbar-nav-link-padding-x);
          }
        }

        .navbar-nav-scroll {
          overflow: visible;
        }

        .navbar-collapse {
          display: flex !important; // stylelint-disable-line declaration-no-important
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }

        .offcanvas {
          // stylelint-disable declaration-no-important
          position: static;
          z-index: auto;
          flex-grow: 1;
          width: auto !important;
          height: auto !important;
          visibility: visible !important;
          background-color: transparent !important;
          border: 0 !important;
          transform: none !important;
          @include box-shadow.box-shadow(none);
          @include transition.transition(none);
          // stylelint-enable declaration-no-important

          .offcanvas-header {
            display: none;
          }

          .offcanvas-body {
            display: flex;
            flex-grow: 0;
            padding: 0;
            overflow-y: visible;
          }
        }
      }
    }
  }
}
// scss-docs-end navbar-expand-loop

// Navbar themes
//
// Styles for switching between navbars with light or dark background.

.navbar-light {
  @include deprecate.deprecate("`.navbar-light`", "v5.2.0", "v6.0.0", true);
}

.navbar-dark,
.navbar[data-bs-theme="dark"] {
  // scss-docs-start navbar-dark-css-vars
  --#{variables.$prefix}navbar-color: #{variables.$navbar-dark-color};
  --#{variables.$prefix}navbar-hover-color: #{variables.$navbar-dark-hover-color};
  --#{variables.$prefix}navbar-disabled-color: #{variables.$navbar-dark-disabled-color};
  --#{variables.$prefix}navbar-active-color: #{variables.$navbar-dark-active-color};
  --#{variables.$prefix}navbar-brand-color: #{variables.$navbar-dark-brand-color};
  --#{variables.$prefix}navbar-brand-hover-color: #{variables.$navbar-dark-brand-hover-color};
  --#{variables.$prefix}navbar-toggler-border-color: #{variables.$navbar-dark-toggler-border-color};
  --#{variables.$prefix}navbar-toggler-icon-bg: #{escape-svg.escape-svg(
      variables.$navbar-dark-toggler-icon-bg
    )};
  // scss-docs-end navbar-dark-css-vars
}

@if variables.$enable-dark-mode {
  @include color-mode.color-mode(dark) {
    .navbar-toggler-icon {
      --#{variables.$prefix}navbar-toggler-icon-bg: #{escape-svg.escape-svg(
          variables.$navbar-dark-toggler-icon-bg
        )};
    }
  }
}
